# RC5DES Win32 CLI client makefile (MS Visual C++ for Win32 Alpha/NT)
# see http://www.distributed.net/
#
# Must be built on an Alpha -- there is no VC cross-compiler.

EXENAME = ../../rc5des.exe
OUTPUTPATH = ../../output2
COMMONPATH = ../../common
DESPATH = ../../des/alpha-asm
RC5PATH = ../../rc5/alpha
OGRPATH = ../../ogr
PLATPATH = ..
W32CLIPATH = .

# UNCOMMENT THIS to get a debug build.  Perforance will bite, but
# things will be a lot more debugable
# DEBUG=1 

# Note: With VC++, the Alpha is sort of a schizophrenic machine.
# Ints and Longs are still 32 bits, so we set the defines for a
# 32bit CPU since most of the time, we don't care about performance,
# only about getting the data right.  However, for a few areas
# (like DES slicing) we need to know that we have a 64bit data
# type available.
OPTS_MSVCG = -nologo -W3 -O1 -I$(RC5PATH) -I$(DESPATH) -I$(OGRPATH) \
  -I$(COMMONPATH) -I$(W32CLIPATH) \
  -D_CPU_32BIT_ -D__WIN32__ -DNOMAIN \
  -DNTALPHA -D_M_ALPHA -DBIT_64 -DKWAN -DDWORZ \
  -GR- -GX- -GA -GF -Gy -Zi -Zp8

OPTS_AS = -Gy -Zi

OPTS_MSVCG = -DMULTITHREAD -MT $(OPTS_MSVCG)
OPTS_MSVCGPOST =

!ifdef DEBUG
OPTS_MSVCG = $(OPTS_MSVCG) -Od -DDEBUG
OPTS_AS = $(OPTS_AS) /Zi /O0
!else
OPTS_MSVCG = -DNDEBUG $(OPTS_MSVCG)
OPTS_AS = $(OPTS_AS) /O1
!endif

all: rc5des

# --------------------------------------------

CLI_OBJS =                                \
        $(OUTPUTPATH)/w32cons.obj         \
        $(OUTPUTPATH)/w32pre.obj          \
        $(OUTPUTPATH)/w32sock.obj         \
        $(OUTPUTPATH)/w32svc.obj          \


BASE_OBJS =                               \
        $(OUTPUTPATH)/autobuff.obj        \
        $(OUTPUTPATH)/base64.obj          \
	$(OUTPUTPATH)/bench.obj           \
	$(OUTPUTPATH)/buffupd.obj         \
        $(OUTPUTPATH)/buffwork.obj        \
	$(OUTPUTPATH)/checkpt.obj         \
        $(OUTPUTPATH)/clicdata.obj        \
	$(OUTPUTPATH)/client.obj          \
	$(OUTPUTPATH)/clievent.obj        \
	$(OUTPUTPATH)/cliident.obj        \
        $(OUTPUTPATH)/clirate.obj         \
	$(OUTPUTPATH)/clirun.obj          \
        $(OUTPUTPATH)/clisrate.obj        \
        $(OUTPUTPATH)/clitime.obj         \
	$(OUTPUTPATH)/cmdline.obj         \
        $(OUTPUTPATH)/confmenu.obj        \
	$(OUTPUTPATH)/confopt.obj         \
	$(OUTPUTPATH)/confrwv.obj         \
	$(OUTPUTPATH)/console.obj         \
        $(OUTPUTPATH)/convdes.obj         \
        $(OUTPUTPATH)/cpucheck.obj        \
        $(OUTPUTPATH)/disphelp.obj        \
        $(OUTPUTPATH)/iniread.obj         \
	$(OUTPUTPATH)/logstuff.obj        \
	$(OUTPUTPATH)/lurk.obj            \
        $(OUTPUTPATH)/mail.obj            \
	$(OUTPUTPATH)/modereq.obj         \
	$(OUTPUTPATH)/netinit.obj         \
        $(OUTPUTPATH)/network.obj         \
        $(OUTPUTPATH)/pathwork.obj        \
	$(OUTPUTPATH)/pollsys.obj         \
	$(OUTPUTPATH)/probfill.obj        \
        $(OUTPUTPATH)/problem.obj         \
	$(OUTPUTPATH)/probman.obj         \
        $(OUTPUTPATH)/scram.obj           \
	$(OUTPUTPATH)/selcore.obj         \
	$(OUTPUTPATH)/selftest.obj        \
	$(OUTPUTPATH)/setprio.obj         \
	$(OUTPUTPATH)/triggers.obj        \
        $(OUTPUTPATH)/threadcd.obj        \
        $(OUTPUTPATH)/util.obj            \
                                          \
        $(OUTPUTPATH)/des-slice-dworz.obj \
        $(OUTPUTPATH)/deseval-dworz3.obj  \
                                          \
        $(OUTPUTPATH)/rc5-alpha-nt.obj    \

CLI_LIBS = advapi32.lib user32.lib shell32.lib gdi32.lib

# --------------------------------------------

{$(RC5PATH)}.s{$(OUTPUTPATH)}.obj:
	asaxp $(OPTS_AS) -Fo$@ $<

{$(DESPATH)}.s{$(OUTPUTPATH)}.obj:
	asaxp $(OPTS_AS) -Fo$@ $<

{$(DESPATH)}.cpp{$(OUTPUTPATH)}.obj::
	cl -c $(OPTS_MSVCG) -Fo$(OUTPUTPATH)/ $<

{$(COMMONPATH)}.cpp{$(OUTPUTPATH)}.obj::
	cl -c $(OPTS_MSVCG) -Fo$(OUTPUTPATH)/ $<

{$(W32CLIPATH)}.cpp{$(OUTPUTPATH)}.obj::
	cl -c $(OPTS_MSVCG) -Fo$(OUTPUTPATH)/ $<

# --------------------------------------------

rc5des: $(BASE_OBJS) $(CLI_OBJS) $(RES_FILE)
	link /fixed:no /debug /debugtype:cv,fixup /opt:ref /out:$(EXENAME) $(CLI_LIBS) $**

clean:
	del $(BASE_OBJS:/=\) $(CLI_OBJS:/=\) $(PREBUILT_OBJS:/=\)

superclean: clean
	del $(EXENAME) rc5des.ini buff-in.rc5 buff-out.rc5

rebuild: clean all

# --------------------------------------------

