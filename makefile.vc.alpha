# Win32 client makefile (MS Visual C++ for Win32 Alpha/NT)
# see http://www.distributed.net/
#
# Must be built on an Alpha -- there is no VC cross-compiler.

# CHANGE TO YOUR PATH
VWCL_PATH = c:\rc5src\vwcl

# REST SHOULD BE FINE AS IS
EXENAME_CLI = dnetc.exe
EXENAME_GUI = dnetc-g.exe
OUTPUTPATH = output
COMMONPATH = common
DESPATH = des\alpha-asm
RC5PATH = rc5\alpha
OGRPATH = ogr
PLATPATH = platforms
W32CLIPATH = platforms\win32cli
W32GUIPATH = platforms\win32gui

# UNCOMMENT THIS to get a debug build.  Perforance will bite, but
# things will be a lot more debugable
# DEBUG=1 

# Note: With VC++, the Alpha is sort of a schizophrenic machine.
# Ints and Longs are still 32 bits, so we set the defines for a
# 32bit CPU since most of the time, we don't care about performance,
# only about getting the data right.  However, for a few areas
# (like DES slicing) we need to know that we have a 64bit data
# type available.
OPTS_MSVC = -nologo -W3 -O2 -I$(RC5PATH) -I$(DESPATH) -I$(OGRPATH) \
  -I$(COMMONPATH) -I$(COMMONPATH)\ogr -I$(VWCL_PATH) -I$(W32CLIPATH) \
  -I$(W32GUIPATH) -D_CPU_32BIT_ -D__WIN32__ -DNOMAIN -DNOCONFIG \
  -DNTALPHA -D_M_ALPHA -DNEEDVIRTUALMETHODS -DBIT_64 -DKWAN -DDWORZ \
  -GR- -GX- -GA -GF -Gy -Zi -Zp8 -DMULTITHREAD -MT

OPTS_AS = -Gy -Zi

OPTS_LINK = /fixed /debug /debugtype:cv,fixup /opt:ref

!ifdef DEBUG
OPTS_MSVCG = $(OPTS_MSVCG) -Od -DDEBUG
OPTS_AS = $(OPTS_AS) /O0
!else
OPTS_MSVCG = $(OPTS_MSVCG) -DNDEBUG 
OPTS_AS = $(OPTS_AS) /O1
!endif

all: dnetc dnetc-g

# --------------------------------------------

CLI_OBJS =                                \
	$(OUTPUTPATH)\cli\client.obj      \
	$(OUTPUTPATH)\cli\console.obj     \
	$(OUTPUTPATH)\cli\setprio.obj     \
        $(OUTPUTPATH)\confmenu.obj        \
        $(OUTPUTPATH)\w32cons.obj         \
        $(OUTPUTPATH)\w32pre.obj          \
        $(OUTPUTPATH)\w32sock.obj         \
        $(OUTPUTPATH)\w32ras.obj          \
        $(OUTPUTPATH)\w32svc.obj          \
        $(OUTPUTPATH)\w32util.obj         \

GUI_OBJS =                                \
	$(OUTPUTPATH)\gui\client.obj      \
	$(OUTPUTPATH)\gui\console.obj     \
	$(OUTPUTPATH)\gui\setprio.obj     \
	$(OUTPUTPATH)\guiapp.obj          \
	$(OUTPUTPATH)\guibase.obj         \
	$(OUTPUTPATH)\guicons.obj         \
	$(OUTPUTPATH)\guigraph.obj        \
	$(OUTPUTPATH)\guiprogress.obj     \
	$(OUTPUTPATH)\guiservc.obj        \
	$(OUTPUTPATH)\guisetup.obj        \
	$(OUTPUTPATH)\guithrd.obj         \
	$(OUTPUTPATH)\guiwind.obj         \
	$(OUTPUTPATH)\vWindowAppCore.obj  \
	$(OUTPUTPATH)\w32svc.obj          \


BASE_OBJS =                               \
        $(OUTPUTPATH)\autobuff.obj        \
        $(OUTPUTPATH)\base64.obj          \
	$(OUTPUTPATH)\bench.obj           \
	$(OUTPUTPATH)\buffupd.obj         \
        $(OUTPUTPATH)\buffwork.obj        \
	$(OUTPUTPATH)\checkpt.obj         \
        $(OUTPUTPATH)\clicdata.obj        \
	$(OUTPUTPATH)\clievent.obj        \
	$(OUTPUTPATH)\cliident.obj        \
        $(OUTPUTPATH)\clirate.obj         \
	$(OUTPUTPATH)\clirun.obj          \
        $(OUTPUTPATH)\clisrate.obj        \
        $(OUTPUTPATH)\clitime.obj         \
	$(OUTPUTPATH)\cmdline.obj         \
	$(OUTPUTPATH)\confopt.obj         \
	$(OUTPUTPATH)\confrwv.obj         \
        $(OUTPUTPATH)\convdes.obj         \
        $(OUTPUTPATH)\cpucheck.obj        \
        $(OUTPUTPATH)\disphelp.obj        \
        $(OUTPUTPATH)\iniread.obj         \
	$(OUTPUTPATH)\logstuff.obj        \
	$(OUTPUTPATH)\lurk.obj            \
        $(OUTPUTPATH)\mail.obj            \
	$(OUTPUTPATH)\modereq.obj         \
	$(OUTPUTPATH)\netinit.obj         \
        $(OUTPUTPATH)\network.obj         \
        $(OUTPUTPATH)\pathwork.obj        \
	$(OUTPUTPATH)\pollsys.obj         \
	$(OUTPUTPATH)\probfill.obj        \
        $(OUTPUTPATH)\problem.obj         \
	$(OUTPUTPATH)\probman.obj         \
	$(OUTPUTPATH)\random.obj          \
        $(OUTPUTPATH)\scram.obj           \
	$(OUTPUTPATH)\selcore.obj         \
	$(OUTPUTPATH)\selftest.obj        \
	$(OUTPUTPATH)\triggers.obj        \
        $(OUTPUTPATH)\threadcd.obj        \
        $(OUTPUTPATH)\util.obj            \
                                          \
        $(OUTPUTPATH)\des-slice-dworz.obj \
        $(OUTPUTPATH)\deseval-dworz3.obj  \
                                          \
        $(OUTPUTPATH)\rc5-alpha-nt.obj    \


CLI_LIBS = advapi32.lib user32.lib shell32.lib gdi32.lib
GUI_LIBS = advapi32.lib user32.lib shell32.lib gdi32.lib wsock32.lib comdlg32.lib winmm.lib
RES_FILE = $(OUTPUTPATH)\guiwin32.res

# --------------------------------------------

{$(RC5PATH)}.s{$(OUTPUTPATH)}.obj:
	asaxp $(OPTS_AS) -Fo$@ $<

{$(DESPATH)}.s{$(OUTPUTPATH)}.obj:
	asaxp $(OPTS_AS) -Fo$@ $<

{$(DESPATH)}.cpp{$(OUTPUTPATH)\}.obj::
	cl -c $(OPTS_MSVC) -Fo$(OUTPUTPATH)\ $<

{$(W32CLIPATH)}.cpp{$(OUTPUTPATH)\}.obj::
	cl -c $(OPTS_MSVC) -Fo$(OUTPUTPATH)\ $<

{$(W32GUIPATH)}.cpp{$(OUTPUTPATH)\}.obj::
	cl -c $(OPTS_MSVC) -Fo$(OUTPUTPATH)\ $<

{$(COMMONPATH)}.cpp{$(OUTPUTPATH)\}.obj::
	cl -c $(OPTS_MSVC) -Fo$(OUTPUTPATH)\ $<

{$(COMMONPATH)}.cpp{$(OUTPUTPATH)\cli\}.obj::
	cl -c $(OPTS_MSVC) -Fo$(OUTPUTPATH)\cli\ $<

{$(COMMONPATH)}.cpp{$(OUTPUTPATH)\gui\}.obj::
	cl -c $(OPTS_MSVC) -DWIN32GUI -Fo$(OUTPUTPATH)\gui\ $<

$(OUTPUTPATH)\vWindowAppCore.obj: $(VWCL_PATH)\vWindowAppCore.cpp
	cl -c $(OPTS_MSVC) -Fo$@ $**

$(OUTPUTPATH)\guiwin32.res: $(W32GUIPATH)\guiwin32.rc $(W32GUIPATH)\guiwin.rc $(W32GUIPATH)\resource.h
	rc -d_Windows -d_M_ALPHA -dNTALPHA -i $(COMMONPATH) -fo$@ $(W32GUIPATH)\guiwin32.rc

# --------------------------------------------

$(OUTPUTPATH):
	-mkdir $(OUTPUTPATH)

$(OUTPUTPATH)\cli: $(OUTPUTPATH)
	-mkdir $(OUTPUTPATH)\cli

$(OUTPUTPATH)\gui: $(OUTPUTPATH)
	-mkdir $(OUTPUTPATH)\gui

dnetc: $(OUTPUTPATH)\cli $(BASE_OBJS) $(CLI_OBJS)
	link $(OPTS_LINK) /out:$(EXENAME_CLI) $(CLI_LIBS) $(BASE_OBJS) $(CLI_OBJS)

dnetc-g: $(OUTPUTPATH)\gui $(BASE_OBJS) $(GUI_OBJS) $(RES_FILE)
	link $(OPTS_LINK) /out:$(EXENAME_GUI) $(GUI_LIBS) $(BASE_OBJS) $(GUI_OBJS) $(RES_FILE)

clean:
	-del $(BASE_OBJS) $(CLI_OBJS) $(GUI_OBJS) $(PREBUILT_OBJS)

superclean: clean
	-del $(EXENAME_CLI) $(EXENAME_GUI) dnetc.ini dnetc-g.ini buff-in.rc5 buff-out.rc5

rebuild: clean all

# --------------------------------------------

