# distributed.net client makefile for VC
# see http://www.distributed.net/
#
# $Id: makefile.vc,v 1.56.2.25 2000/06/27 13:38:22 cyp Exp $
#

!ifndef PROCESSOR_ARCHITECTURE
PROCESSOR_ARCHITECTURE = x86
!endif # default to x86
!if "$(PROCESSOR_ARCHITECTURE)" == "ALPHA"
ALPHA=1
!endif

BASENAME = dnetc
OUTPUTPATH = output
COMMONPATH = common
RC5SRCPATH = rc5
DESSRCPATH = des
OGRSRCPATH = ogr
CSCSRCPATH = csc
CHIPSRCPATH = platforms
PLATSRCPATH = platforms/win32cli
#EXECOMPRESSOR = upxw.exe -9 --compress-resources=0

#HAVE_DES_CORES=1
#HAVE_CSC_CORES=1
HAVE_OGR_CORES=1

# --------------------------------------------

!ifdef ALPHA
OPTS_CC_CPU = -DNTALPHA 
OPTS_M_PLAT = ALPHA
OPTS_AS = -Gy -Zi -O1
!else
OPTS_CC_CPU = 
OPTS_M_PLAT = IX86
!endif

!ifdef DEBUG
OPTS_CC_DEBUG = -Zi -DDEBUG
OPTS_LINK_DEBUG = /debug /pdb:none /pdbtype:consolidate
!else
OPTS_CC_DEBUG = -DNDEBUG
OPTS_LINK_DEBUG = /release
!endif

# a little blurb about options
#
# -Gs<num> == control stack probes (DevStudio docs)
#          == disable stack checks ("cl -?")
# -Gf == eliminates duplicate strings
# -Gy == enable function-level linking
# -GR- ==disable RTTI
# -GX- ==disable synchronous exception handling
# -GA == optimize code for windows application
#
# -Og == global optimizations
# -Oi == intrinsic functions
# -Os == favor small code
# -Ot == favor fast code
# -Oy == omit frame pointer
# -Oa == assume no aliasing
# -Ob0 == disable inline function expansion
# -Ob1 == only "inline" or "__inline" functions will be expanded
# -Ob2 == any suitable functions will be expanded
#
# -O1 == -Og     -Os -Oy -Ob1 -Gs -Gf -Gy
# -O2 == -Og -Oi -Ot -Oy -Ob1 -Gs -Gf -Gy
# -Ox == -Og -Oi -Ot -Oy -Ob1 -Gs

OPTS_MSVC = -nologo -I$(COMMONPATH) -I$(PLATSRCPATH) -I$(OGRSRCPATH) \
            -I$(CSCSRCPATH) -DMULTITHREAD -D__WIN32__ -DLURK \
            -W3 -MT -GR- -GX- -GA -GF \
            -D_M_$(OPTS_M_PLAT) $(OPTS_CC_CPU) $(OPTS_CC_DEBUG) 
OPTS_LIBS = advapi32.lib user32.lib kernel32.lib gdi32.lib
OPTS_LINK = /nologo /incremental:no /version:3.10 \
            /machine:$(OPTS_M_PLAT) $(OPTS_LINK_DEBUG)
OPTS_RC   = -d_Windows -d_M_{$(OPTS_M_PLAT)}

# --------------------------------------------

all: $(BASENAME)

# --------------------------------------------

RES_FILE = $(OUTPUTPATH)/$(BASENAME).res
RC_FILE = $(PLATSRCPATH)/w32cons.rc

COMMON_OBJS =                        \
        $(OUTPUTPATH)/autobuff.obj   \
        $(OUTPUTPATH)/base64.obj     \
        $(OUTPUTPATH)/bench.obj      \
        $(OUTPUTPATH)/buffupd.obj    \
        $(OUTPUTPATH)/buffbase.obj   \
        $(OUTPUTPATH)/buffpriv.obj   \
        $(OUTPUTPATH)/checkpt.obj    \
        $(OUTPUTPATH)/clicdata.obj   \
        $(OUTPUTPATH)/client.obj     \
        $(OUTPUTPATH)/clievent.obj   \
        $(OUTPUTPATH)/cliident.obj   \
        $(OUTPUTPATH)/clirate.obj    \
        $(OUTPUTPATH)/clirun.obj     \
        $(OUTPUTPATH)/clisrate.obj   \
        $(OUTPUTPATH)/clitime.obj    \
        $(OUTPUTPATH)/cmdline.obj    \
        $(OUTPUTPATH)/confmenu.obj   \
        $(OUTPUTPATH)/confopt.obj    \
        $(OUTPUTPATH)/confrwv.obj    \
        $(OUTPUTPATH)/console.obj    \
        $(OUTPUTPATH)/convdes.obj    \
        $(OUTPUTPATH)/cpucheck.obj   \
        $(OUTPUTPATH)/disphelp.obj   \
        $(OUTPUTPATH)/iniread.obj    \
        $(OUTPUTPATH)/logstuff.obj   \
        $(OUTPUTPATH)/lurk.obj       \
        $(OUTPUTPATH)/mail.obj       \
        $(OUTPUTPATH)/modereq.obj    \
        $(OUTPUTPATH)/netinit.obj    \
        $(OUTPUTPATH)/netres.obj     \
        $(OUTPUTPATH)/network.obj    \
        $(OUTPUTPATH)/pathwork.obj   \
        $(OUTPUTPATH)/pollsys.obj    \
        $(OUTPUTPATH)/probfill.obj   \
        $(OUTPUTPATH)/problem.obj    \
        $(OUTPUTPATH)/probman.obj    \
        $(OUTPUTPATH)/random.obj     \
        $(OUTPUTPATH)/scram.obj      \
        $(OUTPUTPATH)/selcore.obj    \
        $(OUTPUTPATH)/selftest.obj   \
        $(OUTPUTPATH)/setprio.obj    \
        $(OUTPUTPATH)/triggers.obj   \
        $(OUTPUTPATH)/util.obj

PLAT_OBJS =                          \
        $(OUTPUTPATH)/w32cons.obj    \
        $(OUTPUTPATH)/w32pre.obj     \
        $(OUTPUTPATH)/w32ras.obj     \
        $(OUTPUTPATH)/w32sock.obj    \
        $(OUTPUTPATH)/w32ss.obj      \
        $(OUTPUTPATH)/w32svc.obj     \
        $(OUTPUTPATH)/w32exe.obj     \
        $(OUTPUTPATH)/w32ini.obj     \
        $(OUTPUTPATH)/w32snapp.obj   \
        $(OUTPUTPATH)/w32util.obj

SCR_OBJS =                           \
        $(OUTPUTPATH)/w32ss.obj      \
        $(OUTPUTPATH)/w32ssb.obj     \
        $(OUTPUTPATH)/w32exe.obj     \
        $(OUTPUTPATH)/w32ini.obj     \
        $(OUTPUTPATH)/w32util.obj

CUI_OBJS =                           \
        $(OUTPUTPATH)/w32cuis.obj

# -------

!ifdef ALPHA
CHIP_OBJS =
!else
CHIP_OBJS = $(OUTPUTPATH)/x86ident.obj
!endif

# --------------------------------- RC5 ----------------------------

!ifdef ALPHA
RC5_OBJS =                           \
        $(OUTPUTPATH)/rc5-alpha-nt.obj
!else
RC5_OBJS =                           \
        $(OUTPUTPATH)/brfp5.obj      \
        $(OUTPUTPATH)/rc5-rgk5.obj   \
        $(OUTPUTPATH)/rc5-rgk6.obj   \
        $(OUTPUTPATH)/rc5-rgp6.obj   \
        $(OUTPUTPATH)/rc5mmx.obj     \
        $(OUTPUTPATH)/rg486.obj      \
        $(OUTPUTPATH)/rg6x86.obj     \
        $(OUTPUTPATH)/rc5-hbk7.obj
OPTS_MSVC = $(OPTS_MSVC) -DMMX_RC5
!endif

# --------------------------------- DES ----------------------------

!ifndef HAVE_DES_CORES
DES_OBJS =
!else
!ifdef ALPHA
DES_OBJS =                                   \
        $(OUTPUTPATH)/des-slice-dworz.obj    \
        $(OUTPUTPATH)/deseval-dworz3.obj
OPTS_MSVC = $(OPTS_MSVC) -DHAVE_DES_CORES -DKWAN -DDWORZ
!else                                
DES_OBJS =                                   \
        $(OUTPUTPATH)/bbdeslow.obj           \
        $(OUTPUTPATH)/bdeslow.obj            \
        $(OUTPUTPATH)/des-slice.obj          \
        $(OUTPUTPATH)/des-slice-meggs.obj    \
        $(OUTPUTPATH)/des-x86.obj            \
        $(OUTPUTPATH)/deseval.obj            \
#       $(OUTPUTPATH)/deseval-meggs3-mmx.gcc \
        $(OUTPUTPATH)/deseval-mmx.obj        \
        $(OUTPUTPATH)/p1bdespro.obj          \
        $(OUTPUTPATH)/p2bdespro.obj          \
        $(OUTPUTPATH)/sboxes-kwan4.obj       \
#       $(OUTPUTPATH)/sboxes-mmx.obj
OPTS_MSVC = $(OPTS_MSVC) -DHAVE_DES_CORES -DMMX_BITSLICER -DMEGGS -DKWAN 
!endif
!endif

# --------------------------------- CSC ----------------------------

!ifndef HAVE_CSC_CORES
CSC_OBJS =
!else
!ifdef ALPHA
CSC_OBJS =                           \
        $(OUTPUTPATH)/convcsc.obj    \
        $(OUTPUTPATH)/csc-1k.obj     \
        $(OUTPUTPATH)/csc-1k-i.obj   \
        $(OUTPUTPATH)/csc-6b.obj     \
        $(OUTPUTPATH)/csc-6b-i.obj   \
        $(OUTPUTPATH)/csc-common.obj
OPTS_MSVC = $(OPTS_MSVC) -DHAVE_CSC_CORES
!else
CSC_OBJS =                           \
         $(OUTPUTPATH)/convcsc.obj   \
         $(OUTPUTPATH)/csc-1k.obj    \
         $(OUTPUTPATH)/csc-1k-i.obj  \
         $(OUTPUTPATH)/csc-6b.obj    \
         $(OUTPUTPATH)/csc-6b-i.obj  \
         $(OUTPUTPATH)/csc-comm.obj  \
         $(OUTPUTPATH)/csc-mmx.obj
OPTS_MSVC = $(OPTS_MSVC) -DHAVE_CSC_CORES -DMMX_CSC
!endif
!endif

# --------------------------------- OGR ----------------------------

!ifndef HAVE_OGR_CORES
OGR_OBJS =
!else
OGR_OBJS =                           \
        $(OUTPUTPATH)/choosedat.obj  \
        $(OUTPUTPATH)/crc32.obj      \
        $(OUTPUTPATH)/ogr.obj
OPTS_MSVC = $(OPTS_MSVC) -DHAVE_OGR_CORES
!endif

# --------------------------------------------

!ifdef ALPHA
{$(RC5SRCPATH)/alpha}.s{$(OUTPUTPATH)}.obj:
        asaxp $(OPTS_AS) -Fo$@ $<

{$(DESSRCPATH)/alpha-asm}.s{$(OUTPUTPATH)}.obj:
        asaxp $(OPTS_AS) -Fo$@ $<

{$(DESSRCPATH)/alpha-asm}.cpp{$(OUTPUTPATH)}.obj::
        cl -c $(OPTS_MSVC) -Ox -Fo$(OUTPUTPATH)\ $<

{$(CSCSRCPATH)}.cpp{$(OUTPUTPATH)}.obj::
        cl -c $(OPTS_MSVC) -Ox -Fo$(OUTPUTPATH)\ $<
!else
{$(CHIPSRCPATH)}.asm{$(OUTPUTPATH)}.obj:
        nasmw -o $(@:/=\) -f win32 -i $(CHIPSRCPATH:/=\) $(**:/=\)

{$(RC5SRCPATH)/x86/nasm}.asm{$(OUTPUTPATH)}.obj:
        nasmw -o $(@:/=\) -f win32 -i $(RC5SRCPATH:/=\)\x86\nasm\ $(**:/=\)

{$(DESSRCPATH)/brydmasm}.asm{$(OUTPUTPATH)}.obj:
        tasm32 /t /m /ml /dmodelnum=2 /i$(DESSRCPATH:/=\)\brydmasm $(**:/=\), $(@:/=\)

{$(DESSRCPATH)/nasm}.asm{$(OUTPUTPATH)}.obj:
        nasmw -o $(@:/=\) -f win32 -i $(DESSRCPATH:/=\)\nasm\ $(**:/=\)

{$(DESSRCPATH)/mmx-bitslice}.asm{$(OUTPUTPATH)}.obj:
        nasmw -o $(@:/=\) -f win32 -i $(DESSRCPATH:/=\)\mmx-bitslice\ $(**:/=\)

{$(CSCSRCPATH)/x86}.asm{$(OUTPUTPATH)}.obj:
        nasmw -o $(@:/=\) -f win32 -i $(CSCSRCPATH:/=\)\x86\ $(**:/=\)

{$(CSCSRCPATH)/x86/mmx}.asm{$(OUTPUTPATH)}.obj:
        nasmw -o $(@:/=\) -f win32 -i $(CSCSRCPATH:/=\)\x86\ $(**:/=\)

!endif

{$(DESSRCPATH)}.cpp{$(OUTPUTPATH)}.obj::
        cl -c $(OPTS_MSVC) -Ox -Fo$(OUTPUTPATH)\ $<

{$(OGRSRCPATH)}.cpp{$(OUTPUTPATH)}.obj::
        cl -c $(OPTS_MSVC) -Ox -Fo$(OUTPUTPATH)\ $<

{$(PLATSRCPATH)}.cpp{$(OUTPUTPATH)}.obj::
        cl -c $(OPTS_MSVC) -O1 -Fo$(OUTPUTPATH)\ $<

{$(PLATSRCPATH)}.c{$(OUTPUTPATH)}.obj::
        cl -c -Zl -O1 -Fo$(OUTPUTPATH)\ $<

{$(COMMONPATH)}.cpp{$(OUTPUTPATH)}.obj::
        cl -c $(OPTS_MSVC) -O2 -Fo$(OUTPUTPATH)\ $<

$(RES_FILE):    $(RC_FILE)
        rc  -i $(OPTS_RC) -I$(COMMONPATH) -fo$@ $(**:/=\)

# --------------------------------------------

$(BASENAME): $(PLAT_OBJS) $(COMMON_OBJS) $(CHIP_OBJS) $(RC5_OBJS) $(DES_OBJS) $(OGR_OBJS) $(CSC_OBJS) $(SCR_OBJS) $(CUI_OBJS) $(RES_FILE)
# the screensaver's 4.0 tag will be adjusted to 3.10 by the _client_ if running on a 3.x platform
        link $(OPTS_LINK) /SUBSYSTEM:WINDOWS /OUT:$(BASENAME).scr /version:4.00 $(OPTS_LIBS) $(SCR_OBJS) $(RES_FILE) 
        link $(OPTS_LINK) /SUBSYSTEM:CONSOLE /OUT:$(BASENAME).com /version:3.10 $(OPTS_LIBS) $(CUI_OBJS)
        link $(OPTS_LINK) /SUBSYSTEM:WINDOWS /OUT:$(BASENAME).exe /version:3.10 /MAP:$(BASENAME).map $(OPTS_LIBS) $(PLAT_OBJS) $(COMMON_OBJS) $(CHIP_OBJS) $(RC5_OBJS) $(DES_OBJS) $(OGR_OBJS) $(CSC_OBJS) $(RES_FILE)
!ifdef EXECOMPRESSOR
        $(EXECOMPRESSOR) $(BASENAME).scr
        $(EXECOMPRESSOR) $(BASENAME).com
        $(EXECOMPRESSOR) $(BASENAME).exe
!endif

clean:
        -del $(OUTPUTPATH:/=\)\*.obj $(RES_FILE:/=\)

superclean: clean
        -del $(BASENAME).map $(BASENAME).exe $(BASENAME).scr $(BASENAME).com $(BASENAME).ini buff-in.* buff-out.*

rebuild: clean all

# --------------------------------------------

