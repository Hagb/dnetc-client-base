# makefile distributed.net client (Borland C++ for Win32).
# For information about distributed.net, see http://www.distributed.net/
#
# As of Feb 2000, Borland C++ 5.5 compiler is free for download.
# http://www.borland.com/bcppbuilder/freecompiler/
# ftp://ftpd.inprise.com/download/bcppbuilder/FreeCommandLineTools.exe

.autodepend


# Borland library and include paths.
BCCINCLUDE = c:\borland\bcc55\include
BCCLIBRARY = c:\borland\bcc55\lib


# distributed.net source and compilation paths.
EXENAME = dnetc.exe
OUTPUTPATH = output
COMMONPATH = common
DESPATH = des
RC5PATH = rc5
CSCPATH = csc
OGRPATH = ogr
PLATPATH = platforms
MODULEDEFNAME = $(OUTPUTPATH)\dnetc.def


# define variable to existence to enable debugging.
#DEBUG=1

# define to control which additional contests are included.
#HAVE_DES_CORES=1
#HAVE_CSC_CORES=1
HAVE_OGR_CORES=1



# Main compilation and linking options
BCCOPTS = /a4 /Vv /x- /xd- /RT- /r /k- /d /w /O2 /O /OS /tWM \
	/I$(BCCINCLUDE) /I$(COMMONPATH) /I$(PLATPATH)\win32cli \
	/I$(OGRPATH) /D_CPU_32BIT_ /DMULTITHREAD


NASMOPTS = -f obj

TLINKOPTS = /aa /x /Tpe /n /B:0x400000 /L$(BCCLIBRARY)


!ifdef DEBUG
BCCOPTS = /v $(BCCOPTS)
TASMOPTS = /zi $(TASMOPTS)
TLINKOPTS = /v $(TLINKOPTS)
!else
BCCOPTS = $(BCCOPTS) /DNDEBUG
!endif

!ifdef MMXRC5
BCCOPTS = $(BCCOPTS) /DMMX_RC5
!endif

!ifdef MMXDES
BCCOPTS = $(BCCOPTS) /DMMX_BITSLICER /DBIT_64 /DMEGGS /DKWAN
!endif


.path.asm = $(RC5PATH)\x86\nasm;$(DESPATH)\mmx-bitslice;$(CSCPATH)\x86;$(PLATPATH)
.path.cpp = $(COMMONPATH);$(RC5PATH);$(DESPATH);$(CSCPATH);$(OGRPATH);$(PLATPATH)/win32cli
.path.obj = $(OUTPUTPATH)

all:	$(EXENAME)

# --------------------------------------------

COMMON_OBJS =                    \
        $(OUTPUTPATH)/autobuff.obj   \
        $(OUTPUTPATH)/base64.obj     \
        $(OUTPUTPATH)/bench.obj      \
        $(OUTPUTPATH)/buffupd.obj    \
        $(OUTPUTPATH)/buffwork.obj   \
        $(OUTPUTPATH)/checkpt.obj    \
        $(OUTPUTPATH)/clicdata.obj   \
        $(OUTPUTPATH)/client.obj     \
        $(OUTPUTPATH)/clievent.obj   \
        $(OUTPUTPATH)/cliident.obj   \
        $(OUTPUTPATH)/clirate.obj    \
        $(OUTPUTPATH)/clirun.obj     \
        $(OUTPUTPATH)/clisrate.obj   \
        $(OUTPUTPATH)/clitime.obj    \
        $(OUTPUTPATH)/cmdline.obj    \
        $(OUTPUTPATH)/confmenu.obj   \
        $(OUTPUTPATH)/confopt.obj    \
        $(OUTPUTPATH)/confrwv.obj    \
        $(OUTPUTPATH)/console.obj    \
        $(OUTPUTPATH)/convdes.obj    \
        $(OUTPUTPATH)/cpucheck.obj   \
        $(OUTPUTPATH)/disphelp.obj   \
        $(OUTPUTPATH)/iniread.obj    \
        $(OUTPUTPATH)/logstuff.obj   \
        $(OUTPUTPATH)/lurk.obj       \
        $(OUTPUTPATH)/mail.obj       \
        $(OUTPUTPATH)/modereq.obj    \
        $(OUTPUTPATH)/netinit.obj    \
        $(OUTPUTPATH)/netres.obj     \
        $(OUTPUTPATH)/network.obj    \
        $(OUTPUTPATH)/pathwork.obj   \
        $(OUTPUTPATH)/pollsys.obj    \
        $(OUTPUTPATH)/probfill.obj   \
        $(OUTPUTPATH)/problem.obj    \
        $(OUTPUTPATH)/probman.obj    \
        $(OUTPUTPATH)/random.obj     \
        $(OUTPUTPATH)/scram.obj      \
        $(OUTPUTPATH)/selcore.obj    \
        $(OUTPUTPATH)/selftest.obj   \
        $(OUTPUTPATH)/setprio.obj    \
        $(OUTPUTPATH)/triggers.obj   \
        $(OUTPUTPATH)/util.obj

PLAT_OBJS =                          \
        $(OUTPUTPATH)/w32cons.obj    \
        $(OUTPUTPATH)/w32pre.obj     \
        $(OUTPUTPATH)/w32ras.obj     \
        $(OUTPUTPATH)/w32sock.obj    \
        $(OUTPUTPATH)/w32ss.obj      \
        $(OUTPUTPATH)/w32svc.obj     \
        $(OUTPUTPATH)/w32util.obj

SCR_OBJS =                           \
        $(OUTPUTPATH)/w32ss.obj      \
        $(OUTPUTPATH)/w32ssb.obj     \
        $(OUTPUTPATH)/w32util.obj

CUI_OBJS =                           \
        $(OUTPUTPATH)/w32cuis.obj

CHIP_OBJS = $(OUTPUTPATH)/x86ident.obj

CLI_LIBS = noeh32.lib cw32mt.lib import32.lib

# --------------------------------- RC5 ----------------------------

RC5_OBJS =                           \
        $(OUTPUTPATH)/brfp5.obj      \
        $(OUTPUTPATH)/rc5-rgk5.obj   \
        $(OUTPUTPATH)/rc5-rgk6.obj   \
        $(OUTPUTPATH)/rc5-rgp6.obj   \
        $(OUTPUTPATH)/rc5mmx.obj     \
        $(OUTPUTPATH)/rg486.obj      \
        $(OUTPUTPATH)/rg6x86.obj     \
        $(OUTPUTPATH)/rc5-ssk7.obj
BCCOPTS = $(BCCOPTS) -DMMX_RC5


# --------------------------------- DES ----------------------------

!ifndef HAVE_DES_CORES
DES_OBJS =
!else
DES_OBJS =                                   \
        $(OUTPUTPATH)/bbdeslow.obj           \
        $(OUTPUTPATH)/bdeslow.obj            \
        $(OUTPUTPATH)/des-slice.obj          \
        $(OUTPUTPATH)/des-slice-meggs.obj    \
        $(OUTPUTPATH)/des-x86.obj            \
        $(OUTPUTPATH)/deseval.obj            \
#       $(OUTPUTPATH)/deseval-meggs3-mmx.gcc \
        $(OUTPUTPATH)/deseval-mmx.obj        \
        $(OUTPUTPATH)/p1bdespro.obj          \
        $(OUTPUTPATH)/p2bdespro.obj          \
        $(OUTPUTPATH)/sboxes-kwan4.obj       \
#       $(OUTPUTPATH)/sboxes-mmx.obj
BCCOPTS = $(BCCOPTS) -DHAVE_DES_CORES -DMMX_BITSLICER -DMEGGS -DKWAN 
!endif

# --------------------------------- CSC ----------------------------

!ifndef HAVE_CSC_CORES
CSC_OBJS =
!else
CSC_OBJS =                           \
         $(OUTPUTPATH)/convcsc.obj   \
         $(OUTPUTPATH)/csc-1k.obj    \
         $(OUTPUTPATH)/csc-1k-i.obj  \
         $(OUTPUTPATH)/csc-6b.obj    \
         $(OUTPUTPATH)/csc-6b-i.obj  \
         $(OUTPUTPATH)/csc-comm.obj  \
         $(OUTPUTPATH)/csc-mmx.obj
BCCOPTS = $(BCCOPTS) -DHAVE_CSC_CORES -DMMX_CSC
!endif

# --------------------------------- OGR ----------------------------

!ifndef HAVE_OGR_CORES
OGR_OBJS =
!else
OGR_OBJS =                           \
        $(OUTPUTPATH)/choosedat.obj  \
        $(OUTPUTPATH)/crc32.obj      \
        $(OUTPUTPATH)/ogr.obj
BCCOPTS = $(BCCOPTS) -DHAVE_OGR_CORES
!endif

# --------------------------------------------

#NASMOMFSTUB = rc5\x86\nasm\omf32.asm
#nasmw $(NASMOPTS) -p$(NASMOMFSTUB) -i $(<D:/=\) $(<:/=\) -o $(@:/=\)
.asm.obj:
        nasmw $(NASMOPTS) -DOS2 -i $(<D:/=\) $(<:/=\) -o $(@:/=\)


.cpp.obj:
        bcc32 -c @&&|
-P $(BCCOPTS) -n$(OUTPUTPATH)
| $< 


.c.obj:
        bcc32 -c @&&|
-P $(BCCOPTS) -n$(OUTPUTPATH)
| $< 


# --------------------------------------------

# Apparently it is necessary to supply a module definition file (*.DEF)
# for our exe, since ILINK32 says it contains "Additional segments".

$(MODULEDEFNAME):
	if exist $(MODULEDEFNAME:/=\) del $(MODULEDEFNAME:/=\)
	copy &&|
CODE	PRELOAD MOVEABLE DISCARDABLE
DATA	PRELOAD MOVEABLE MULTIPLE   ; (for applications)
	PRELOAD MOVEABLE SINGLE   ; (for DLLs)
HEAPSIZE	4096
STACKSIZE	1048576
SEGMENTS
	_TEXT
	_DATA
| $(MODULEDEFNAME:/=\)

# --------------------------------------------

# This is the main client exe compilation target rule.

ALLCLIENTOBJS = $(COMMON_OBJS) $(PLAT_OBJS) $(CHIP_OBJS) \
		$(RC5_OBJS) $(DES_OBJS) $(CSC_OBJS) $(OGR_OBJS)

$(EXENAME):   $(MODULEDEFNAME) $(ALLCLIENTOBJS)
        ilink32 /ap $(TLINKOPTS) @&&|
c0w32.obj $(ALLCLIENTOBJS:/=\),$(EXENAME:/=\),,$(CLI_LIBS),$(MODULEDEFNAME)
|

# --------------------------------------------

